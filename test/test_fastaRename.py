
# -*- coding: utf-8 -*-

########################################################################################
#                                                                                      #
#    Copyright (C) 2011                                                                #
#    Author: Bertrand NÃ©ron                                                            #
#    Organization:'Centre Informatique en Biologie', Institut Pasteur, Paris.          #
#                                                                                      #
#    This program is free software: you can redistribute it and/or modify              #
#    it under the terms of the GNU General Public License version as published by      #
#    the Free Software Foundation, in the version 3 of the License.                    #
#                                                                                      #
#    This program is distributed in the hope that it will be useful,                   #
#    but WITHOUT ANY WARRANTY; without even the implied warranty of                    #
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                     #
#    GNU General Public License for more details.                                      #
#                                                                                      #
#    You should have received a copy of the GNU General Public License                 #
#    along with this program (Please refer to the COPYING document).                   #
#    If not, see <http://www.gnu.org/licenses/>.                                       #
########################################################################################


import unittest
import os
import sys
import shutil

src_path = os.path.abspath( os.path.join( os.path.dirname( __file__ ) , '..', 'src') )
sys.path.append( src_path )
script_path = os.path.join( src_path , 'fastaRename')
os.symlink( script_path , script_path + ".py" )
from fastaRename import fasta_iter, rename_fasta 
os.unlink( script_path + ".py" )

TEST_DIR='/tmp/fastaRename'

class Test(unittest.TestCase):


    def setUp(self):
        shutil.rmtree( TEST_DIR , ignore_errors=True )
        os.makedirs( TEST_DIR )
        self.seqfile = os.path.join( os.path.dirname( __file__ ) , 'abcd.fasta' )
        self.seqs = [ 
('ABCD3_HUMAN ATP-binding cassette sub-family D member 3 (70 kDa peroxisomal membrane protein) (PMP70)' , 
"""MAAFSKYLTARNSSLAGAAFLLLCLLHKRRRALGLHGKKSGKPPLQNNEKEGKKERAVVDKVFFSRLIQILKIMVPRTFC
KETGYLVLIAVMLVSRTYCDVWMIQNGTLIESGIIGRSRKDFKRYLLNFIAAMPLISLVNNFLKYGLNELKLCFRVRLTK
YLYEEYLQAFTYYKMGNLDNRIANPDQLLTQDVEKFCNSVVDLYSNLSKPFLDIVLYIFKLTSAIGAQGPASMMAYLVVS
GLFLTRLRRPIGKMTITEQKYEGEYRYVNSRLITNSEEIAFYNGNKREKQTVHSVFRKLVEHLHNFILFRFSMGFIDSII
AKYLATVVGYLVVSRPFLDLSHPRHLKSTHSELLEDYYQSGRMLLRMSQALGRIVLAGREMTRLAGFTARITELMQVLKD
LNHGKYERTMVSQQEKGIEGVQVIPLIPGAGEIIIADNIIKFDHVPLATPNGDVLIRDLNFEVRSGANVLICGPNGCGKS
SLFRVLGELWPLFGGRLTKPERGKLFYVPQRPYMTLGTLRDQVIYPDGREDQKRKGISDLVLKEYLDNVQLGHILEREGG
WDSVQDWMDVLSGGEKQRMAMARLFYHKPQFAILDECTSAVSVDVEGYIYSHCRKVGITLFTVSHRKSLWKHHEYYLHMD
GRGNYEFKQITEDTVEFGS"""),
('ABCD3_RAT ATP-binding cassette sub-family D member 3 (70 kDa peroxisomal membrane protein) (PMP70)' ,
"""MAAFSKYLTARNSSLAGAAFLLFCLLHKRRRALGLHGKKSGKPPLQNNEKEGKKERAVVDKVFLSRLSQILKIMVPRTFC
KETGYLILIAVMLVSRTYCDVWMIQNGTLIESGIIGRSSKDFKRYLFNFIAAMPLISLVNNFLKYGLNELKLCFRVRLTR
YLYEEYLQAFTYYKMGNLDNRIANPDQLLTQDVEKFCNSVVDLYSNLSKPFLDIVLYIFKLTSAIGAQGPASMMAYLLVS
GLFLTRLRRPIGKMTIMEQKYEGEYRFVNSRLITNSEEIAFYNGNKREKQTIHSVFRKLVEHLHNFIFFRFSMGFIDSII
AKYIATVVGYLVVSRPFLDLAHPRHLHSTHSELLEDYYQSGRMLLRMSQALGRIVLAGREMTRLAGFTARITELMQVLKD
LNHGKYERTMVSQQDKGIEGAQASPLIPGAGEIINADNIIKFDHVPLATPNGDILIQDLSFEVRSGANVLICGPNGCGKS
SLFRVLGELWPLFGGHLTKPERGKLFYVPQRPYMTLGTLRDQVIYPDGKEDQKKKGISDQVLKGYLDNVQLGHILEREGG
WDSVQDWMDVLSGGEKQRMAMARLFYHKPQFAILDECTSAVSVDVEDYIYSHCRKVGITLFTVSHRKSLWKHHEYYLHMD
GRGNYEFKKITEDTVEFGS"""),
('ABCD3_MOUSE ATP-binding cassette sub-family D member 3 (70 kDa peroxisomal membrane protein) (PMP70) (PMP68)' ,
"""MAAFSKYLTARNTSLAGAAFLLLCLLHKRRRALGLHGKKSGKPPLQNNEKEGKKERAVVDKVFLSRLSQILKIMVPRTFC
KETGYLLLIAVMLVSRTYCDVWMIQNGTLIESGIIGRSSKDFKRYLFNFIAAMPLISLVNNFLKYGLNELKLCFRVRLTR
YLYEEYLQAFTYYKMGNLDNRIANPDQLLTQDVEKFCNSVVDLYSNLSKPFLDIVLYIFKLTSAIGAQGPASMMAYLLVS
GLFLTRLRRPIGKMTIMEQKYEGEYRYVNSRLITNSEEIAFYNGNKREKQTIHSVFRKLVEHLHNFIFFRFSMGFIDSII
AKYVATVVGYLVVSRPFLDLAHPRHLHSTHSELLEDYYQSGRMLLRMSQALGRIVLAGREMTRLAGFTARITELMQVLKD
LNHGRYERTMVSQQGKGIEGAQASPLVPGAGEIINTDNIIKFDHVPLATPNGDILIQDLSFEVRSGNHVLICGPNGRGKS
SLFRVLGELWPLFGGRLTKPERGKLFYVPQRPYMTLGTLRDQVIYPDGKEDQKKRGISDQVLKEYLDNVQLGHILEREGG
WDSVQDWMDVLSGGEKQRMAMARLFYHKPQFAILDECTSAVSVDVEDYIYSHCRKVGITLFTVSHTKCLWKHHEYYLHMD
GRGNYEFKKITEDTVEFGS"""),
('ABCD1_HUMAN ATP-binding cassette sub-family D member 1 (Adrenoleukodystrophy protein) (ALDP)' ,
"""MPVLSRPRPWRGNTLKRTAVLLALAAYGAHKVYPLVRQCLAPARGLQAPAGEPTQEASGVAAAKAGMNRVFLQRLLWLLR
LLFPRVLCRETGLLALHSAALVSRTFLSVYVARLDGRLARCIVRKDPRAFGWQLLQWLLIALPATFVNSAIRYLEGQLAL
SFRSRLVAHAYRLYFSQQTYYRVSNMDGRLRNPDQSLTEDVVAFAASVAHLYSNLTKPLLDVAVTSYTLLRAARSRGAGT
AWPSAIAGLVVFLTANVLRAFSPKFGELVAEEARRKGELRYMHSRVVANSEEIAFYGGHEVELALLQRSYQDLASQINLI
LLERLWYVMLEQFLMKYVWSASGLLMVAVPIITATGYSESDAEAVKKAALEKKEEELVSERTEAFTIARNLLTAAADAIE
RIMSSYKEVTELAGYTARVHEMFQVFEDVQRCHFKRPRELEDAQAGSGTIGRSGVRVEGPLKIRGQVVDVEQGIICENIP
IVTPSGEVVVASLNIRVEEGMHLLITGPNGCGKSSLFRILGGLWPTYGGVLYKPPPQRMFYIPQRPYMSVGSLRDQVIYP
DSVEDMQRKGYSEQDLEAILDVVHLHHILQREGGWEAMCDWKDVLSGGEKQRIGMARMFYHRPKYALLDECTSAVSIDVE
GKIFQAAKDAGIALLSITHRPSLWKYHTHLLQFDGEGGWKFEKLDSAARLSLTEEKQRLEQQLAGIPKMQRRLQELCQIL
GEAVAPAHVPAPSPQGPGGLQGAST"""),
('ABCD1_MOUSE ATP-binding cassette sub-family D member 1 (Adrenoleukodystrophy protein) (ALDP)' ,
"""MPVLSTPRPSRVTTLKRTAVVLALTAYGVHKIYPLVRQCLTPARGPQVPAGEPTQEASGATATKAGMNRVFLQRLLALLR
LLFPRVLCRETGLLALHSAALVSRTFLSVYVARLDGRLARCIVRKDPRAFSWQLLQWLLIALPATFINSAIRYLEGQLAL
SFRSRLVAHAYGLYFSQQTYYRVSNMDGRLRNPDQSLTEDVVAFAASVAHLYSNLTKPLLDVAVTSYTLLRAARSRGAGT
AWPSAIAGLVVFLTANVLRAFSPKFGELVAEEARRKGELRYMHSRVVANSEEIAFYGGHEVELALLQHSYQDLASQINLI
LLERLWYVMLEQFLMKYVWSASGLLMVAVPIITATGYAESDSEAMKKAALEMKEEELVSERTEAFTIARNLLTAAADATE
RIMSSYKEVTELAGYTARVYEMFQVFEDVKHCRFKRTGDLEEAQAGPGVMVQSGVHVEGPLKIQGQVVDVEQGIICENIP
IITPTGEVVVASLNIRVEEGMHLLITGPNGCGKSSLFRILGGLWPTYSGVLYKPPPQRMFYIPQRPYMSVGSLRDQVIYP
DSAEDMRRKGCSEQQLEAILGIVHLRHILQREGGWEAVCDWKDVLSGGEKQRIGMARMFYHRPKYALLDECTSAVSIDVE
GKIFQAAKDAGIALLSITHRPSLWKYHTHLLQFDGEGGWKFEKLDSAARLSLTEEKQRLEQQLAGIPKMQGRLQELRQIL
GEAAAPVQPLVPGVPT"""),
('ABCD2_HUMAN ATP-binding cassette sub-family D member 2 (Adrenoleukodystrophy-related protein) (hALDR) (Adrenoleukodystrophy-like 1)',
"""MTHMLNAAADRVKWTRSSAAKRAACLVAAAYALKTLYPIIGKRLKQSGHGKKKAAAYPAAENTEILHCTETICEKPSPGV
NADFFKQLLELRKILFPKLVTTETGWLCLHSVALISRTFLSIYVAGLDGKIVKSIVEKKPRTFIIKLIKWLMIAIPATFV
NSAIRYLECKLALAFRTRLVDHAYETYFTNQTYYKVINMDGRLANPDQSLTEDIMMFSQSVAHLYSNLTKPILDVMLTSY
TLIQTATSRGASPIGPTLLAGLVVYATAKVLKACSPKFGKLVAEEAHRKGYLRYVHSRIIANVEEIAFYRGHKVEMKQLQ
KSYKALADQMNLILSKRLWYIMIEQFLMKYVWSSSGLIMVAIPIITATGFADGEDGQKQVMVSERTEAFTTARNLLASGA
DAIERIMSSYKEVTELAGYTARVYNMFWVFDEVKRGIYKRTAVIQESESHSKNGAKVELPLSDTLAIKGKVIDVDHGIIC
ENVPIITPAGEVVASRLNFKVEEGMHLLITGPNGCGKSSLFRILSGLWPVYEGVLYKPPPQHMFYIPQRPYMSLGSLRDQ
VIYPDSVDDMHDKGYTDQDLERILHNVHLYHIVQREGGWDAVMDWKDVLSGGEKQRMGMARMFYHKPKYALLDECTSAVS
IDVEGKIFQAAKGAGISLLSITHRPSLWKYHTHLLQFDGEGGWRFEQLDTAIRLTLSEEKQKLESQLAGIPKMQQRLNEL
CKILGEDSVLKTIKNEDETS"""),
('ABCD2_MOUSE ATP-binding cassette sub-family D member 2 (Adrenoleukodystrophy-related protein)',
"""MIHMLNAAAYRVKWTRSGAAKRAACLVAAAYALKTLYPIIGKRLKQPGHRKAKAEAYSPAENREILHCTEIICKKPAPGL
NAAFFKQLLELRKILFPKLVTTETGWLCLHSVALISRTFLSIYVAGLDGKIVKSIVEKKPRTFIIKLIKWLMIAIPATFV
NSAIRYLECKLALAFRTRLVDHAYETYFANQTYYKVINMDGRLANPDQSLTEDIMMFSQSVAHLYSNLTKPILDVILTSY
TLIRTATSRGASPIGPTLLAGLVVYATAKVLKACSPKFGSLVAEEAHRKGYLRYVHSRIIANVEEIAFYRGHKVEMKQLQ
KCYKALAYQMNLILSKRLWYIMIEQFLMKYVWSSCGLIMVAIPIITATGFADGDLEDGPKQAMVSDRTEAFTTARNLLAS
GADAIERIMSSYKEITELAGYTARVYNMFWVFDEVKRGIYKRTVTQEPENHSKRGGNLELPLSDTLAIKGTVIDVDHGII
CENVPIITPAGEVVASRLNFKVEEGMHLLITGPNGCGKSSLFRILSGLWPVYEGVLYKPPPQHMFYIPQRPYMSLGSLRD
QVIYPDSADDMREKGYTDQDLERILHSVHLYHIVQREGGWDAVMDWKDVLSGGEKQRMGMARMFYHKPKYALLDECTSAV
SIDVEGKIFQAAIGAGISLLSITHRPSLWKYHTHLLQFDGEGGWRFEQLDTAIRLTLSEEKQKLESQLAGIPKMQQRLNE
LCKILGEDSVLKTIQTPEKTS"""),
('ABCD2_RAT ATP-binding cassette sub-family D member 2 (Adrenoleukodystrophy-related protein)',
"""MIHMLNAAAYRVKWTRSGAAKRAACLVAAAYALKTLYPILGRRLKQPGHRKAKAEDYPPAENRERLHCTEIICKKPAPGL
NADFFKQLLELRKILFPKLVTTETGWLCLHSVALISRTFLSIYVAGLDGKIVKSIVEKKPRTFIIKLVKWLMIAVPATFV
NSAIRYLECKLALAFRTRLVDHAYETYFANQTYYKVINMDGRLANPDQSLTEDIMMFSQSVAHLYSNLTKPILDVILTSY
TLIRTATSRGASPIGPTLLAGLVVYATAKVLKACSPKFGTLVAEEAHRKGYLRYVHSRIIANVEEIAFYRGHKVEMKQLQ
KCYKALAYQMNLILSKRLWYIMIEQFLMKYVWSGCGLIMVAIPIITATGFADGDLEDGPKQAMVSDRTEAFTTARNLLAS
GADAIERIMSSYKEITELAGYTARVYNMFWVFDEVKRGIYKRTVTQEPENNSKSGGGLELPLSDTLAIKGTVIDVDHGIL
CENVPIITPAGEVVASSLNFKVEEGMHLLITGPNGCGKSSLFRILSGLWPVYEGVLYKPPPQHMFYIPQRPYMSLGSLRD
QVIYPDSVDDMHEKGYTDRDLEHILHSVHLYHIVQREGGWDAVMDWKDVLSGGEKQRMGMARMFYHKPKYALLDECTSAV
SIDVEGKIFQAAIGAGISLLSITHRPSLWKYHTHLLQFDGEGGWRFEQLDTAIRLTLSEEKQKLESQLAGIPKMQQRLNE
LCKILGEDSVLKTIQTAEDTS"""),
('ABCD4_HUMAN ATP-binding cassette sub-family D member 4 (Peroxisomal membrane protein 69) (PMP69) (Peroxisomal membrane protein 1-like) (PXMP1-L) (P70R)',
"""MAVAGPAPGAGARPRLDLQFLQRFLQILKVLFPSWSSQNALMFLTLLCLTLLEQFVIYQVGLIPSQYYGVLGNKDLEGFK
TLTFLAVMLIVLNSTLKSFDQFTCNLLYVSWRKDLTEHLHRLYFRGRAYYTLNVLRDDIDNPDQRISQDVERFCRQLSSM
ASKLIISPFTLVYYTYQCFQSTGWLGPVSIFGYFILGTVVNKTLMGPIVMKLVHQEKLEGDFRFKHMQIRVNAEPAAFYR
AGHVEHMRTDRRLQRLLQTQRELMSKELWLYIGINTFDYLGSILSYVVIAIPIFSGVYGDLSPAELSTLVSKNAFVCIYL
ISCFTQLIDLSTTLSDVAGYTHRIGQLRETLLDMSLKSQDCEILGESEWGLDTPPGWPAAEPADTAFLLERVSISAPSSD
KPLIKDLSLKISEGQSLLITGNTGTGKTSLLRVLGGLWTSTRGSVQMLTDFGPHGVLFLPQKPFFTDGTLREQVIYPLKE
VYPDSGSADDERILRFLELAGLSNLVARTEGLDQQVDWNWYDVLSPGEMQRLSFARLFYLQPKYAVLDEATSALTEEVES
ELYRIGQQLGMTFISVGHRQSLEKFHSLVLKLCGGGRWELMRIKVE"""),
('ABCD4_MOUSE ATP-binding cassette sub-family D member 4 (Peroxisomal membrane protein 69) (PMP69) (Peroxisomal membrane protein 1-like) (PXMP1-L) (P70R)',
"""MAVPGPTARAGARPRLDLQLVQRFVRIQKVFFPSWSSQNVLMLMTLLCVTLLEQLVIYQVGLIPSQYYGVLGNKDLDGFK
ALTLLAVTLIVLNSTLKSFDQFTCNLLYVSWRKDLTEHLHHLYFRARVYYTLNVLRDDIDNPDQRISQDVERFCRQLSSV
TSKLIISPFTLTYYTYQCFQSTGWLGPVSIFGYFIVGTMVNKTLMGPIVTKLVQQEKLEGDFRFKHMQIRVNAEPAAFYR
AGLVEHMRTDRRLQRLLQTQRELMSRELWLYIGINTFDYLGSILSYVVIAIPIFSGVYGDLSPTELSTLVSKNAFVCIYL
ISCFTQLIDLSTTLSDVAGYTHRIGELQEALLDMSRKSQDCEALGESEWDLDKTPGCPTTEPSDTAFLLDRVSILAPSSD
KPLIKDLSLKICEGQSLLITGNTGTGKTSLLRVLGGLWEGMKGSVQMLADFGPHGVLFLPQKPFFTDGTLREQVIYPLKE
IYPDSGSADDERIVRFLELAGLSSLVARTGGLDQQVDWNWYDVLSPGEMQRLSFARLFYLQPKYAVLDEATSALTEEAES
ELYRIGQQLGMTFISVGHRPSLEKFHSWVLRLHGGGSWELTRIKLE""")
                     ]
        
    def tearDown(self):
        shutil.rmtree( TEST_DIR , ignore_errors=True )
        pass

    def testfasta_iter(self):
        fasta = open( self.seqfile ,'r' )
        fasta_i = fasta_iter( fasta )
        i= 0 
        for sequences in  fasta_i:
            header, seq = sequences
            self.assertEqual( header , self.seqs[i][0] )
            self.assertEqual( seq    , self.seqs[i][1] )
            i +=1
        fasta.close()
        
    def testrename_fasta(self):
        fasta_file = open( self.seqfile ,'r' )
        renamed_fasta_name = os.path.join( TEST_DIR , 'fasta_renamed' ) 
        renamed_fasta = open( renamed_fasta_name , 'w' )
        mapping_file_name  = os.path.join( TEST_DIR , 'mapping' ) 
        mapping_file = open( mapping_file_name , 'w' )
        rename_fasta(fasta_file , renamed_fasta , mapping_file )
        fasta_file.close()
        renamed_fasta.close()
        mapping_file.close()
        
        old_fasta = open( self.seqfile ,'r' )
        old_fasta_iter = fasta_iter( old_fasta )
        new_fasta = open( renamed_fasta_name , 'r')
        new_fasta_iter = fasta_iter( new_fasta )
        mapping_file = open( mapping_file_name , 'r')
        
        for l in mapping_file:
            old_header , old_seq = old_fasta_iter.next()
            new_header , new_seq = new_fasta_iter.next()
            new_map , old_map = l[:-1].split('\t')
            self.assertEqual( old_header , old_map )
            self.assertEqual( new_header , new_map )
            self.assertEqual( old_seq , new_seq )
            
            
if __name__ == "__main__":
    from optparse import OptionParser    
    parser = OptionParser()
    parser.add_option("-v", "--verbose" , 
                      dest= "verbosity" , 
                      action="count" , 
                      help= "set the verbosity level of output",
                      default = 0
                      )
    opt , args = parser.parse_args()    

    #import sys;sys.argv = ['', 'Test.testName']
    unittest.main( verbosity= opt.verbosity )